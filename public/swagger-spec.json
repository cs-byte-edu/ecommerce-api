{
  "openapi": "3.1.0",
  "x-powered-by": "strapi",
  "x-strapi-version": "5.22.0",
  "info": {
    "title": "sport",
    "description": "API documentation for sport v0.1.0",
    "version": "0.1.0"
  },
  "paths": {
    "/benefits": {
      "get": {
        "operationId": "benefit/get/benefits",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "title",
                    "description",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "title",
                      "description",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "title",
                      "description",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "title",
                        "description",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "image"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "image"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "title": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "description": {
                            "description": "A richtext field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-08-17T19:00:19.073Z",
                            "type": "string"
                          },
                          "image": {
                            "description": "A media field",
                            "$ref": "#/components/schemas/PluginUploadFileDocument"
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "benefit"
        ]
      },
      "post": {
        "operationId": "benefit/post/benefits",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "image"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "image"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A richtext field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.083Z",
                          "type": "string"
                        },
                        "image": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "benefit"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "description": {
                        "description": "A richtext field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.082Z",
                        "type": "string"
                      },
                      "image": {
                        "description": "A media field"
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/benefits/{id}": {
      "get": {
        "operationId": "benefit/get/benefits_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "image"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "image"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "title",
                    "description",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "title",
                      "description",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "title",
                      "description",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "title",
                        "description",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A richtext field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.080Z",
                          "type": "string"
                        },
                        "image": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "benefit"
        ]
      },
      "put": {
        "operationId": "benefit/put/benefits_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "image"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "image"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A richtext field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.085Z",
                          "type": "string"
                        },
                        "image": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "benefit"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "description": {
                        "description": "A richtext field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.085Z",
                        "type": "string"
                      },
                      "image": {
                        "description": "A media field"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "benefit/delete/benefits_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "image"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "image"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A richtext field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.087Z",
                          "type": "string"
                        },
                        "image": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "benefit"
        ]
      }
    },
    "/brands": {
      "get": {
        "operationId": "brand/get/brands",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "website",
                  "country",
                  "isActive",
                  "sortOrder",
                  "seoTitle",
                  "seoDescription",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "website",
                  "country",
                  "isActive",
                  "sortOrder",
                  "seoTitle",
                  "seoDescription",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "slug",
                    "description",
                    "website",
                    "country",
                    "isActive",
                    "sortOrder",
                    "seoTitle",
                    "seoDescription",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "description",
                      "website",
                      "country",
                      "isActive",
                      "sortOrder",
                      "seoTitle",
                      "seoDescription",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "description",
                      "website",
                      "country",
                      "isActive",
                      "sortOrder",
                      "seoTitle",
                      "seoDescription",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "slug",
                        "description",
                        "website",
                        "country",
                        "isActive",
                        "sortOrder",
                        "seoTitle",
                        "seoDescription",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "logo"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "logo"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "slug": {
                            "description": "A UID field",
                            "type": "string"
                          },
                          "description": {
                            "description": "A text field",
                            "type": "string"
                          },
                          "website": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "country": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "isActive": {
                            "description": "A boolean field",
                            "default": true,
                            "type": "boolean"
                          },
                          "sortOrder": {
                            "description": "An integer field",
                            "default": 0,
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991
                          },
                          "seoTitle": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "seoDescription": {
                            "description": "A text field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-08-17T19:00:19.092Z",
                            "type": "string"
                          },
                          "logo": {
                            "description": "A media field",
                            "$ref": "#/components/schemas/PluginUploadFileDocument"
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "name",
                          "slug",
                          "isActive",
                          "sortOrder",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "brand"
        ]
      },
      "post": {
        "operationId": "brand/post/brands",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "website",
                  "country",
                  "isActive",
                  "sortOrder",
                  "seoTitle",
                  "seoDescription",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "logo"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "logo"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "website": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "country": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "isActive": {
                          "description": "A boolean field",
                          "default": true,
                          "type": "boolean"
                        },
                        "sortOrder": {
                          "description": "An integer field",
                          "default": 0,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "seoTitle": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "seoDescription": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.104Z",
                          "type": "string"
                        },
                        "logo": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "slug",
                        "isActive",
                        "sortOrder",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "brand"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "description": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "website": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "country": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "isActive": {
                        "description": "A boolean field",
                        "default": true,
                        "type": "string",
                        "enum": [
                          "0",
                          "1",
                          "t",
                          "true",
                          "f",
                          "false"
                        ]
                      },
                      "sortOrder": {
                        "description": "A float field",
                        "default": 0,
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "seoTitle": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "seoDescription": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.103Z",
                        "type": "string"
                      },
                      "logo": {
                        "description": "A media field"
                      }
                    },
                    "required": [
                      "name",
                      "slug",
                      "isActive",
                      "sortOrder",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/brands/{id}": {
      "get": {
        "operationId": "brand/get/brands_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "website",
                  "country",
                  "isActive",
                  "sortOrder",
                  "seoTitle",
                  "seoDescription",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "logo"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "logo"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "website",
                  "country",
                  "isActive",
                  "sortOrder",
                  "seoTitle",
                  "seoDescription",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "slug",
                    "description",
                    "website",
                    "country",
                    "isActive",
                    "sortOrder",
                    "seoTitle",
                    "seoDescription",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "description",
                      "website",
                      "country",
                      "isActive",
                      "sortOrder",
                      "seoTitle",
                      "seoDescription",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "description",
                      "website",
                      "country",
                      "isActive",
                      "sortOrder",
                      "seoTitle",
                      "seoDescription",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "slug",
                        "description",
                        "website",
                        "country",
                        "isActive",
                        "sortOrder",
                        "seoTitle",
                        "seoDescription",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "website": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "country": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "isActive": {
                          "description": "A boolean field",
                          "default": true,
                          "type": "boolean"
                        },
                        "sortOrder": {
                          "description": "An integer field",
                          "default": 0,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "seoTitle": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "seoDescription": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.100Z",
                          "type": "string"
                        },
                        "logo": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "slug",
                        "isActive",
                        "sortOrder",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "brand"
        ]
      },
      "put": {
        "operationId": "brand/put/brands_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "website",
                  "country",
                  "isActive",
                  "sortOrder",
                  "seoTitle",
                  "seoDescription",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "logo"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "logo"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "website": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "country": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "isActive": {
                          "description": "A boolean field",
                          "default": true,
                          "type": "boolean"
                        },
                        "sortOrder": {
                          "description": "An integer field",
                          "default": 0,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "seoTitle": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "seoDescription": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.108Z",
                          "type": "string"
                        },
                        "logo": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "slug",
                        "isActive",
                        "sortOrder",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "brand"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "description": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "website": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "country": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "isActive": {
                        "description": "A boolean field",
                        "default": true,
                        "type": "string",
                        "enum": [
                          "0",
                          "1",
                          "t",
                          "true",
                          "f",
                          "false"
                        ]
                      },
                      "sortOrder": {
                        "description": "A float field",
                        "default": 0,
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "seoTitle": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "seoDescription": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.106Z",
                        "type": "string"
                      },
                      "logo": {
                        "description": "A media field"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "brand/delete/brands_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "website",
                  "country",
                  "isActive",
                  "sortOrder",
                  "seoTitle",
                  "seoDescription",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "logo"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "logo"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "website",
                  "country",
                  "isActive",
                  "sortOrder",
                  "seoTitle",
                  "seoDescription",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "website": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "country": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "isActive": {
                          "description": "A boolean field",
                          "default": true,
                          "type": "boolean"
                        },
                        "sortOrder": {
                          "description": "An integer field",
                          "default": 0,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "seoTitle": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "seoDescription": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.110Z",
                          "type": "string"
                        },
                        "logo": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "slug",
                        "isActive",
                        "sortOrder",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "brand"
        ]
      }
    },
    "/carts": {
      "get": {
        "operationId": "cart/get/carts",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "payment_status",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "payment_status",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "payment_status",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "payment_status",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "users_permissions_user",
                    "cart_items"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "users_permissions_user",
                      "cart_items"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "payment_status": {
                            "description": "An enum field",
                            "default": "active",
                            "type": "string",
                            "enum": [
                              "active",
                              "complete"
                            ]
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-08-17T19:00:19.113Z",
                            "type": "string"
                          },
                          "users_permissions_user": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          },
                          "cart_items": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiCartItemCartItemDocument"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "payment_status",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart"
        ]
      },
      "post": {
        "operationId": "cart/post/carts",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "users_permissions_user",
                    "cart_items"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "users_permissions_user",
                      "cart_items"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "payment_status": {
                          "description": "An enum field",
                          "default": "active",
                          "type": "string",
                          "enum": [
                            "active",
                            "complete"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.129Z",
                          "type": "string"
                        },
                        "users_permissions_user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        },
                        "cart_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCartItemCartItemDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "payment_status",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "payment_status": {
                        "description": "An enum field",
                        "default": "active",
                        "type": "string",
                        "enum": [
                          "active",
                          "complete"
                        ]
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.128Z",
                        "type": "string"
                      },
                      "users_permissions_user": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "cart_items": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "required": [
                      "payment_status",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/carts/{id}": {
      "get": {
        "operationId": "cart/get/carts_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "users_permissions_user",
                    "cart_items"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "users_permissions_user",
                      "cart_items"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "payment_status",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "payment_status",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "payment_status",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "payment_status",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "payment_status": {
                          "description": "An enum field",
                          "default": "active",
                          "type": "string",
                          "enum": [
                            "active",
                            "complete"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.127Z",
                          "type": "string"
                        },
                        "users_permissions_user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        },
                        "cart_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCartItemCartItemDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "payment_status",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart"
        ]
      },
      "put": {
        "operationId": "cart/put/carts_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "users_permissions_user",
                    "cart_items"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "users_permissions_user",
                      "cart_items"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "payment_status": {
                          "description": "An enum field",
                          "default": "active",
                          "type": "string",
                          "enum": [
                            "active",
                            "complete"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.130Z",
                          "type": "string"
                        },
                        "users_permissions_user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        },
                        "cart_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCartItemCartItemDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "payment_status",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "payment_status": {
                        "description": "An enum field",
                        "default": "active",
                        "type": "string",
                        "enum": [
                          "active",
                          "complete"
                        ]
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.130Z",
                        "type": "string"
                      },
                      "users_permissions_user": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "cart_items": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "cart/delete/carts_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "users_permissions_user",
                    "cart_items"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "users_permissions_user",
                      "cart_items"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "payment_status": {
                          "description": "An enum field",
                          "default": "active",
                          "type": "string",
                          "enum": [
                            "active",
                            "complete"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.134Z",
                          "type": "string"
                        },
                        "users_permissions_user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        },
                        "cart_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCartItemCartItemDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "payment_status",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart"
        ]
      }
    },
    "/cart/add": {
      "post": {
        "operationId": "cart/post/cart_add",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart"
        ]
      }
    },
    "/cart": {
      "get": {
        "operationId": "cart/get/cart",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart"
        ]
      }
    },
    "/cart/update": {
      "put": {
        "operationId": "cart/put/cart_update",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart"
        ]
      }
    },
    "/cart/clear": {
      "delete": {
        "operationId": "cart/delete/cart_clear",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart"
        ]
      }
    },
    "/cart/remove/{productId}": {
      "delete": {
        "operationId": "cart/delete/cart_remove_by_productId",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart"
        ]
      }
    },
    "/cart/sync": {
      "post": {
        "operationId": "cart/post/cart_sync",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart"
        ]
      }
    },
    "/cart-items": {
      "get": {
        "operationId": "cart-item/get/cart_items",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price_at_time",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price_at_time",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "quantity",
                    "price_at_time",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "quantity",
                      "price_at_time",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "quantity",
                      "price_at_time",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "quantity",
                        "price_at_time",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "cart",
                    "product"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "cart",
                      "product"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "quantity": {
                            "description": "An integer field",
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991
                          },
                          "price_at_time": {
                            "description": "A decimal field",
                            "type": "number"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-08-17T19:00:19.137Z",
                            "type": "string"
                          },
                          "cart": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/ApiCartCartDocument"
                          },
                          "product": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "quantity",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart-item"
        ]
      },
      "post": {
        "operationId": "cart-item/post/cart_items",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price_at_time",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "cart",
                    "product"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "cart",
                      "product"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "quantity": {
                          "description": "An integer field",
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "price_at_time": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.141Z",
                          "type": "string"
                        },
                        "cart": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCartCartDocument"
                        },
                        "product": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiProductProductDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "quantity",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart-item"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "quantity": {
                        "description": "A float field",
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "price_at_time": {
                        "description": "A decimal field",
                        "type": "number"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.140Z",
                        "type": "string"
                      },
                      "cart": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "product": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "required": [
                      "quantity",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/cart-items/{id}": {
      "get": {
        "operationId": "cart-item/get/cart_items_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price_at_time",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "cart",
                    "product"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "cart",
                      "product"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price_at_time",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "quantity",
                    "price_at_time",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "quantity",
                      "price_at_time",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "quantity",
                      "price_at_time",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "quantity",
                        "price_at_time",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "quantity": {
                          "description": "An integer field",
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "price_at_time": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.139Z",
                          "type": "string"
                        },
                        "cart": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCartCartDocument"
                        },
                        "product": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiProductProductDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "quantity",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart-item"
        ]
      },
      "put": {
        "operationId": "cart-item/put/cart_items_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price_at_time",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "cart",
                    "product"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "cart",
                      "product"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "quantity": {
                          "description": "An integer field",
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "price_at_time": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.143Z",
                          "type": "string"
                        },
                        "cart": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCartCartDocument"
                        },
                        "product": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiProductProductDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "quantity",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart-item"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "quantity": {
                        "description": "A float field",
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "price_at_time": {
                        "description": "A decimal field",
                        "type": "number"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.142Z",
                        "type": "string"
                      },
                      "cart": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "product": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "cart-item/delete/cart_items_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price_at_time",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "cart",
                    "product"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "cart",
                      "product"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price_at_time",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "quantity": {
                          "description": "An integer field",
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "price_at_time": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.147Z",
                          "type": "string"
                        },
                        "cart": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCartCartDocument"
                        },
                        "product": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiProductProductDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "quantity",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "cart-item"
        ]
      }
    },
    "/categories": {
      "get": {
        "operationId": "category/get/categories",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "short_description",
                  "is_active",
                  "sort_order",
                  "seo_title",
                  "seo_description",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "short_description",
                  "is_active",
                  "sort_order",
                  "seo_title",
                  "seo_description",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "slug",
                    "description",
                    "short_description",
                    "is_active",
                    "sort_order",
                    "seo_title",
                    "seo_description",
                    "type",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "description",
                      "short_description",
                      "is_active",
                      "sort_order",
                      "seo_title",
                      "seo_description",
                      "type",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "description",
                      "short_description",
                      "is_active",
                      "sort_order",
                      "seo_title",
                      "seo_description",
                      "type",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "slug",
                        "description",
                        "short_description",
                        "is_active",
                        "sort_order",
                        "seo_title",
                        "seo_description",
                        "type",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "image",
                    "icon",
                    "parent",
                    "children",
                    "products"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "image",
                      "icon",
                      "parent",
                      "children",
                      "products"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "slug": {
                            "description": "A UID field",
                            "type": "string"
                          },
                          "description": {
                            "description": "A text field",
                            "type": "string"
                          },
                          "short_description": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "is_active": {
                            "description": "A boolean field",
                            "default": true,
                            "type": "boolean"
                          },
                          "sort_order": {
                            "description": "An integer field",
                            "default": 0,
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991
                          },
                          "seo_title": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "seo_description": {
                            "description": "A text field",
                            "type": "string"
                          },
                          "type": {
                            "description": "An enum field",
                            "default": "product",
                            "type": "string",
                            "enum": [
                              "product",
                              "marketing",
                              "goals"
                            ]
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-08-17T19:00:19.151Z",
                            "type": "string"
                          },
                          "image": {
                            "description": "A media field",
                            "$ref": "#/components/schemas/PluginUploadFileDocument"
                          },
                          "icon": {
                            "description": "A media field",
                            "$ref": "#/components/schemas/PluginUploadFileDocument"
                          },
                          "parent": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                          },
                          "children": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                            }
                          },
                          "products": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiProductProductDocument"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "name",
                          "slug",
                          "is_active",
                          "sort_order",
                          "type",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "category"
        ]
      },
      "post": {
        "operationId": "category/post/categories",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "short_description",
                  "is_active",
                  "sort_order",
                  "seo_title",
                  "seo_description",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "image",
                    "icon",
                    "parent",
                    "children",
                    "products"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "image",
                      "icon",
                      "parent",
                      "children",
                      "products"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "short_description": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "A boolean field",
                          "default": true,
                          "type": "boolean"
                        },
                        "sort_order": {
                          "description": "An integer field",
                          "default": 0,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "seo_title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "seo_description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "type": {
                          "description": "An enum field",
                          "default": "product",
                          "type": "string",
                          "enum": [
                            "product",
                            "marketing",
                            "goals"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.159Z",
                          "type": "string"
                        },
                        "image": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "icon": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "parent": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                        },
                        "children": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                          }
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "slug",
                        "is_active",
                        "sort_order",
                        "type",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "description": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "short_description": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "is_active": {
                        "description": "A boolean field",
                        "default": true,
                        "type": "string",
                        "enum": [
                          "0",
                          "1",
                          "t",
                          "true",
                          "f",
                          "false"
                        ]
                      },
                      "sort_order": {
                        "description": "A float field",
                        "default": 0,
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "seo_title": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "seo_description": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "type": {
                        "description": "An enum field",
                        "default": "product",
                        "type": "string",
                        "enum": [
                          "product",
                          "marketing",
                          "goals"
                        ]
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.157Z",
                        "type": "string"
                      },
                      "image": {
                        "description": "A media field"
                      },
                      "icon": {
                        "description": "A media field"
                      },
                      "parent": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "children": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "products": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "required": [
                      "name",
                      "slug",
                      "is_active",
                      "sort_order",
                      "type",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "operationId": "category/get/categories_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "short_description",
                  "is_active",
                  "sort_order",
                  "seo_title",
                  "seo_description",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "image",
                    "icon",
                    "parent",
                    "children",
                    "products"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "image",
                      "icon",
                      "parent",
                      "children",
                      "products"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "short_description",
                  "is_active",
                  "sort_order",
                  "seo_title",
                  "seo_description",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "slug",
                    "description",
                    "short_description",
                    "is_active",
                    "sort_order",
                    "seo_title",
                    "seo_description",
                    "type",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "description",
                      "short_description",
                      "is_active",
                      "sort_order",
                      "seo_title",
                      "seo_description",
                      "type",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "description",
                      "short_description",
                      "is_active",
                      "sort_order",
                      "seo_title",
                      "seo_description",
                      "type",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "slug",
                        "description",
                        "short_description",
                        "is_active",
                        "sort_order",
                        "seo_title",
                        "seo_description",
                        "type",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "short_description": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "A boolean field",
                          "default": true,
                          "type": "boolean"
                        },
                        "sort_order": {
                          "description": "An integer field",
                          "default": 0,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "seo_title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "seo_description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "type": {
                          "description": "An enum field",
                          "default": "product",
                          "type": "string",
                          "enum": [
                            "product",
                            "marketing",
                            "goals"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.155Z",
                          "type": "string"
                        },
                        "image": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "icon": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "parent": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                        },
                        "children": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                          }
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "slug",
                        "is_active",
                        "sort_order",
                        "type",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "category"
        ]
      },
      "put": {
        "operationId": "category/put/categories_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "short_description",
                  "is_active",
                  "sort_order",
                  "seo_title",
                  "seo_description",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "image",
                    "icon",
                    "parent",
                    "children",
                    "products"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "image",
                      "icon",
                      "parent",
                      "children",
                      "products"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "short_description": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "A boolean field",
                          "default": true,
                          "type": "boolean"
                        },
                        "sort_order": {
                          "description": "An integer field",
                          "default": 0,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "seo_title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "seo_description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "type": {
                          "description": "An enum field",
                          "default": "product",
                          "type": "string",
                          "enum": [
                            "product",
                            "marketing",
                            "goals"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.164Z",
                          "type": "string"
                        },
                        "image": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "icon": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "parent": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                        },
                        "children": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                          }
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "slug",
                        "is_active",
                        "sort_order",
                        "type",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "description": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "short_description": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "is_active": {
                        "description": "A boolean field",
                        "default": true,
                        "type": "string",
                        "enum": [
                          "0",
                          "1",
                          "t",
                          "true",
                          "f",
                          "false"
                        ]
                      },
                      "sort_order": {
                        "description": "A float field",
                        "default": 0,
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "seo_title": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "seo_description": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "type": {
                        "description": "An enum field",
                        "default": "product",
                        "type": "string",
                        "enum": [
                          "product",
                          "marketing",
                          "goals"
                        ]
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.163Z",
                        "type": "string"
                      },
                      "image": {
                        "description": "A media field"
                      },
                      "icon": {
                        "description": "A media field"
                      },
                      "parent": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "children": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "products": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "category/delete/categories_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "short_description",
                  "is_active",
                  "sort_order",
                  "seo_title",
                  "seo_description",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "image",
                    "icon",
                    "parent",
                    "children",
                    "products"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "image",
                      "icon",
                      "parent",
                      "children",
                      "products"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "short_description",
                  "is_active",
                  "sort_order",
                  "seo_title",
                  "seo_description",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "short_description": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "A boolean field",
                          "default": true,
                          "type": "boolean"
                        },
                        "sort_order": {
                          "description": "An integer field",
                          "default": 0,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "seo_title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "seo_description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "type": {
                          "description": "An enum field",
                          "default": "product",
                          "type": "string",
                          "enum": [
                            "product",
                            "marketing",
                            "goals"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.166Z",
                          "type": "string"
                        },
                        "image": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "icon": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "parent": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                        },
                        "children": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                          }
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "slug",
                        "is_active",
                        "sort_order",
                        "type",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "category"
        ]
      }
    },
    "/filter-groups": {
      "get": {
        "operationId": "filter-group/get/filter_groups",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "slug",
                    "type",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "type",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "type",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "slug",
                        "type",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "filter_values"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "filter_values"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "slug": {
                            "description": "A UID field",
                            "type": "string"
                          },
                          "type": {
                            "description": "An enum field",
                            "type": "string",
                            "enum": [
                              "select",
                              "checkbox",
                              "range"
                            ]
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-08-17T19:00:19.170Z",
                            "type": "string"
                          },
                          "filter_values": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiFilterValueFilterValueDocument"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "filter-group"
        ]
      },
      "post": {
        "operationId": "filter-group/post/filter_groups",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "filter_values"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "filter_values"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "type": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "select",
                            "checkbox",
                            "range"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.176Z",
                          "type": "string"
                        },
                        "filter_values": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiFilterValueFilterValueDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "filter-group"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "type": {
                        "description": "An enum field",
                        "type": "string",
                        "enum": [
                          "select",
                          "checkbox",
                          "range"
                        ]
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.176Z",
                        "type": "string"
                      },
                      "filter_values": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/filter-groups/{id}": {
      "get": {
        "operationId": "filter-group/get/filter_groups_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "filter_values"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "filter_values"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "slug",
                    "type",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "type",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "type",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "slug",
                        "type",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "type": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "select",
                            "checkbox",
                            "range"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.173Z",
                          "type": "string"
                        },
                        "filter_values": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiFilterValueFilterValueDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "filter-group"
        ]
      },
      "put": {
        "operationId": "filter-group/put/filter_groups_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "filter_values"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "filter_values"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "type": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "select",
                            "checkbox",
                            "range"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.178Z",
                          "type": "string"
                        },
                        "filter_values": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiFilterValueFilterValueDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "filter-group"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "type": {
                        "description": "An enum field",
                        "type": "string",
                        "enum": [
                          "select",
                          "checkbox",
                          "range"
                        ]
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.178Z",
                        "type": "string"
                      },
                      "filter_values": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "filter-group/delete/filter_groups_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "filter_values"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "filter_values"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "type": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "select",
                            "checkbox",
                            "range"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.180Z",
                          "type": "string"
                        },
                        "filter_values": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiFilterValueFilterValueDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "filter-group"
        ]
      }
    },
    "/filter-values": {
      "get": {
        "operationId": "filter-value/get/filter_values",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "slug",
                  "value",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "slug",
                  "value",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "slug",
                    "value",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "slug",
                      "value",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "slug",
                      "value",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "slug",
                        "value",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "filter_group"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "filter_group"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "slug": {
                            "description": "A UID field",
                            "type": "string"
                          },
                          "value": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-08-17T19:00:19.182Z",
                            "type": "string"
                          },
                          "filter_group": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/ApiFilterGroupFilterGroupDocument"
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "filter-value"
        ]
      },
      "post": {
        "operationId": "filter-value/post/filter_values",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "slug",
                  "value",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "filter_group"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "filter_group"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "value": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.186Z",
                          "type": "string"
                        },
                        "filter_group": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiFilterGroupFilterGroupDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "filter-value"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "value": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.185Z",
                        "type": "string"
                      },
                      "filter_group": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/filter-values/{id}": {
      "get": {
        "operationId": "filter-value/get/filter_values_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "slug",
                  "value",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "filter_group"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "filter_group"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "slug",
                  "value",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "slug",
                    "value",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "slug",
                      "value",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "slug",
                      "value",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "slug",
                        "value",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "value": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.184Z",
                          "type": "string"
                        },
                        "filter_group": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiFilterGroupFilterGroupDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "filter-value"
        ]
      },
      "put": {
        "operationId": "filter-value/put/filter_values_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "slug",
                  "value",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "filter_group"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "filter_group"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "value": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.187Z",
                          "type": "string"
                        },
                        "filter_group": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiFilterGroupFilterGroupDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "filter-value"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "value": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.187Z",
                        "type": "string"
                      },
                      "filter_group": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "filter-value/delete/filter_values_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "slug",
                  "value",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "filter_group"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "filter_group"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "slug",
                  "value",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "value": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.190Z",
                          "type": "string"
                        },
                        "filter_group": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiFilterGroupFilterGroupDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "filter-value"
        ]
      }
    },
    "/orders": {
      "get": {
        "operationId": "order/get/orders",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "order_date",
                  "order_number",
                  "order_status",
                  "customer_name",
                  "customer_email",
                  "customer_phone",
                  "total_amount",
                  "shipping_method",
                  "shipping_address",
                  "payment_method",
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "order_date",
                  "order_number",
                  "order_status",
                  "customer_name",
                  "customer_email",
                  "customer_phone",
                  "total_amount",
                  "shipping_method",
                  "shipping_address",
                  "payment_method",
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "order_date",
                    "order_number",
                    "order_status",
                    "customer_name",
                    "customer_email",
                    "customer_phone",
                    "total_amount",
                    "shipping_method",
                    "shipping_address",
                    "payment_method",
                    "payment_status",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "order_date",
                      "order_number",
                      "order_status",
                      "customer_name",
                      "customer_email",
                      "customer_phone",
                      "total_amount",
                      "shipping_method",
                      "shipping_address",
                      "payment_method",
                      "payment_status",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "order_date",
                      "order_number",
                      "order_status",
                      "customer_name",
                      "customer_email",
                      "customer_phone",
                      "total_amount",
                      "shipping_method",
                      "shipping_address",
                      "payment_method",
                      "payment_status",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "order_date",
                        "order_number",
                        "order_status",
                        "customer_name",
                        "customer_email",
                        "customer_phone",
                        "total_amount",
                        "shipping_method",
                        "shipping_address",
                        "payment_method",
                        "payment_status",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "order_items",
                    "users_permissions_user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "order_items",
                      "users_permissions_user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "order_date": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "order_number": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "order_status": {
                            "description": "An enum field",
                            "default": "pending",
                            "type": "string",
                            "enum": [
                              "pending",
                              "processing",
                              "shipped",
                              "delivered",
                              "cancelled"
                            ]
                          },
                          "customer_name": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "customer_email": {
                            "description": "An email field",
                            "type": "string",
                            "format": "email",
                            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                          },
                          "customer_phone": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "total_amount": {
                            "description": "A decimal field",
                            "type": "number"
                          },
                          "shipping_method": {
                            "description": "An enum field",
                            "type": "string",
                            "enum": [
                              "nova_poshta",
                              "ukr_poshta"
                            ]
                          },
                          "shipping_address": {
                            "description": "A text field",
                            "type": "string"
                          },
                          "payment_method": {
                            "description": "An enum field",
                            "type": "string",
                            "enum": [
                              "cash_on_delivery",
                              "card_online",
                              "apple_pay",
                              "google_pay",
                              "liqpay",
                              "monobank",
                              "privat24"
                            ]
                          },
                          "payment_status": {
                            "description": "An enum field",
                            "type": "string",
                            "enum": [
                              "pending",
                              "paid",
                              "failed",
                              "refunded"
                            ]
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-08-17T19:00:19.194Z",
                            "type": "string"
                          },
                          "order_items": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiOrderItemOrderItemDocument"
                            }
                          },
                          "users_permissions_user": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "order_status",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "order"
        ]
      },
      "post": {
        "operationId": "order/post/orders",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "order_date",
                  "order_number",
                  "order_status",
                  "customer_name",
                  "customer_email",
                  "customer_phone",
                  "total_amount",
                  "shipping_method",
                  "shipping_address",
                  "payment_method",
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "order_items",
                    "users_permissions_user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "order_items",
                      "users_permissions_user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "order_date": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "order_number": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "order_status": {
                          "description": "An enum field",
                          "default": "pending",
                          "type": "string",
                          "enum": [
                            "pending",
                            "processing",
                            "shipped",
                            "delivered",
                            "cancelled"
                          ]
                        },
                        "customer_name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "customer_email": {
                          "description": "An email field",
                          "type": "string",
                          "format": "email",
                          "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                        },
                        "customer_phone": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "total_amount": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "shipping_method": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "nova_poshta",
                            "ukr_poshta"
                          ]
                        },
                        "shipping_address": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "cash_on_delivery",
                            "card_online",
                            "apple_pay",
                            "google_pay",
                            "liqpay",
                            "monobank",
                            "privat24"
                          ]
                        },
                        "payment_status": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "pending",
                            "paid",
                            "failed",
                            "refunded"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.201Z",
                          "type": "string"
                        },
                        "order_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiOrderItemOrderItemDocument"
                          }
                        },
                        "users_permissions_user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "order_status",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "order"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "order_date": {
                        "description": "A datetime field",
                        "type": "string"
                      },
                      "order_number": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "order_status": {
                        "description": "An enum field",
                        "default": "pending",
                        "type": "string",
                        "enum": [
                          "pending",
                          "processing",
                          "shipped",
                          "delivered",
                          "cancelled"
                        ]
                      },
                      "customer_name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "customer_email": {
                        "description": "An email field",
                        "type": "string",
                        "format": "email",
                        "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                      },
                      "customer_phone": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "total_amount": {
                        "description": "A decimal field",
                        "type": "number"
                      },
                      "shipping_method": {
                        "description": "An enum field",
                        "type": "string",
                        "enum": [
                          "nova_poshta",
                          "ukr_poshta"
                        ]
                      },
                      "shipping_address": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "payment_method": {
                        "description": "An enum field",
                        "type": "string",
                        "enum": [
                          "cash_on_delivery",
                          "card_online",
                          "apple_pay",
                          "google_pay",
                          "liqpay",
                          "monobank",
                          "privat24"
                        ]
                      },
                      "payment_status": {
                        "description": "An enum field",
                        "type": "string",
                        "enum": [
                          "pending",
                          "paid",
                          "failed",
                          "refunded"
                        ]
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.200Z",
                        "type": "string"
                      },
                      "order_items": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "users_permissions_user": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "required": [
                      "order_status",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "operationId": "order/get/orders_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "order_date",
                  "order_number",
                  "order_status",
                  "customer_name",
                  "customer_email",
                  "customer_phone",
                  "total_amount",
                  "shipping_method",
                  "shipping_address",
                  "payment_method",
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "order_items",
                    "users_permissions_user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "order_items",
                      "users_permissions_user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "order_date",
                  "order_number",
                  "order_status",
                  "customer_name",
                  "customer_email",
                  "customer_phone",
                  "total_amount",
                  "shipping_method",
                  "shipping_address",
                  "payment_method",
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "order_date",
                    "order_number",
                    "order_status",
                    "customer_name",
                    "customer_email",
                    "customer_phone",
                    "total_amount",
                    "shipping_method",
                    "shipping_address",
                    "payment_method",
                    "payment_status",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "order_date",
                      "order_number",
                      "order_status",
                      "customer_name",
                      "customer_email",
                      "customer_phone",
                      "total_amount",
                      "shipping_method",
                      "shipping_address",
                      "payment_method",
                      "payment_status",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "order_date",
                      "order_number",
                      "order_status",
                      "customer_name",
                      "customer_email",
                      "customer_phone",
                      "total_amount",
                      "shipping_method",
                      "shipping_address",
                      "payment_method",
                      "payment_status",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "order_date",
                        "order_number",
                        "order_status",
                        "customer_name",
                        "customer_email",
                        "customer_phone",
                        "total_amount",
                        "shipping_method",
                        "shipping_address",
                        "payment_method",
                        "payment_status",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "order_date": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "order_number": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "order_status": {
                          "description": "An enum field",
                          "default": "pending",
                          "type": "string",
                          "enum": [
                            "pending",
                            "processing",
                            "shipped",
                            "delivered",
                            "cancelled"
                          ]
                        },
                        "customer_name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "customer_email": {
                          "description": "An email field",
                          "type": "string",
                          "format": "email",
                          "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                        },
                        "customer_phone": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "total_amount": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "shipping_method": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "nova_poshta",
                            "ukr_poshta"
                          ]
                        },
                        "shipping_address": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "cash_on_delivery",
                            "card_online",
                            "apple_pay",
                            "google_pay",
                            "liqpay",
                            "monobank",
                            "privat24"
                          ]
                        },
                        "payment_status": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "pending",
                            "paid",
                            "failed",
                            "refunded"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.198Z",
                          "type": "string"
                        },
                        "order_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiOrderItemOrderItemDocument"
                          }
                        },
                        "users_permissions_user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "order_status",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "order"
        ]
      },
      "put": {
        "operationId": "order/put/orders_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "order_date",
                  "order_number",
                  "order_status",
                  "customer_name",
                  "customer_email",
                  "customer_phone",
                  "total_amount",
                  "shipping_method",
                  "shipping_address",
                  "payment_method",
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "order_items",
                    "users_permissions_user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "order_items",
                      "users_permissions_user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "order_date": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "order_number": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "order_status": {
                          "description": "An enum field",
                          "default": "pending",
                          "type": "string",
                          "enum": [
                            "pending",
                            "processing",
                            "shipped",
                            "delivered",
                            "cancelled"
                          ]
                        },
                        "customer_name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "customer_email": {
                          "description": "An email field",
                          "type": "string",
                          "format": "email",
                          "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                        },
                        "customer_phone": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "total_amount": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "shipping_method": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "nova_poshta",
                            "ukr_poshta"
                          ]
                        },
                        "shipping_address": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "cash_on_delivery",
                            "card_online",
                            "apple_pay",
                            "google_pay",
                            "liqpay",
                            "monobank",
                            "privat24"
                          ]
                        },
                        "payment_status": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "pending",
                            "paid",
                            "failed",
                            "refunded"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.206Z",
                          "type": "string"
                        },
                        "order_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiOrderItemOrderItemDocument"
                          }
                        },
                        "users_permissions_user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "order_status",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "order"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "order_date": {
                        "description": "A datetime field",
                        "type": "string"
                      },
                      "order_number": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "order_status": {
                        "description": "An enum field",
                        "default": "pending",
                        "type": "string",
                        "enum": [
                          "pending",
                          "processing",
                          "shipped",
                          "delivered",
                          "cancelled"
                        ]
                      },
                      "customer_name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "customer_email": {
                        "description": "An email field",
                        "type": "string",
                        "format": "email",
                        "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                      },
                      "customer_phone": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "total_amount": {
                        "description": "A decimal field",
                        "type": "number"
                      },
                      "shipping_method": {
                        "description": "An enum field",
                        "type": "string",
                        "enum": [
                          "nova_poshta",
                          "ukr_poshta"
                        ]
                      },
                      "shipping_address": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "payment_method": {
                        "description": "An enum field",
                        "type": "string",
                        "enum": [
                          "cash_on_delivery",
                          "card_online",
                          "apple_pay",
                          "google_pay",
                          "liqpay",
                          "monobank",
                          "privat24"
                        ]
                      },
                      "payment_status": {
                        "description": "An enum field",
                        "type": "string",
                        "enum": [
                          "pending",
                          "paid",
                          "failed",
                          "refunded"
                        ]
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.205Z",
                        "type": "string"
                      },
                      "order_items": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "users_permissions_user": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "order/delete/orders_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "order_date",
                  "order_number",
                  "order_status",
                  "customer_name",
                  "customer_email",
                  "customer_phone",
                  "total_amount",
                  "shipping_method",
                  "shipping_address",
                  "payment_method",
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "order_items",
                    "users_permissions_user"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "order_items",
                      "users_permissions_user"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "order_date",
                  "order_number",
                  "order_status",
                  "customer_name",
                  "customer_email",
                  "customer_phone",
                  "total_amount",
                  "shipping_method",
                  "shipping_address",
                  "payment_method",
                  "payment_status",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "order_date": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "order_number": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "order_status": {
                          "description": "An enum field",
                          "default": "pending",
                          "type": "string",
                          "enum": [
                            "pending",
                            "processing",
                            "shipped",
                            "delivered",
                            "cancelled"
                          ]
                        },
                        "customer_name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "customer_email": {
                          "description": "An email field",
                          "type": "string",
                          "format": "email",
                          "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                        },
                        "customer_phone": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "total_amount": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "shipping_method": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "nova_poshta",
                            "ukr_poshta"
                          ]
                        },
                        "shipping_address": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "cash_on_delivery",
                            "card_online",
                            "apple_pay",
                            "google_pay",
                            "liqpay",
                            "monobank",
                            "privat24"
                          ]
                        },
                        "payment_status": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "pending",
                            "paid",
                            "failed",
                            "refunded"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.208Z",
                          "type": "string"
                        },
                        "order_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiOrderItemOrderItemDocument"
                          }
                        },
                        "users_permissions_user": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "order_status",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "order"
        ]
      }
    },
    "/order-items": {
      "get": {
        "operationId": "order-item/get/order_items",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "quantity",
                    "price",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "quantity",
                      "price",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "quantity",
                      "price",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "quantity",
                        "price",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "order",
                    "product"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "order",
                      "product"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "quantity": {
                            "description": "An integer field",
                            "default": 1,
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991
                          },
                          "price": {
                            "description": "A decimal field",
                            "default": 0,
                            "type": "number"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-08-17T19:00:19.211Z",
                            "type": "string"
                          },
                          "order": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/ApiOrderOrderDocument"
                          },
                          "product": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "quantity",
                          "price",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "order-item"
        ]
      },
      "post": {
        "operationId": "order-item/post/order_items",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "order",
                    "product"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "order",
                      "product"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "quantity": {
                          "description": "An integer field",
                          "default": 1,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "price": {
                          "description": "A decimal field",
                          "default": 0,
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.215Z",
                          "type": "string"
                        },
                        "order": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiOrderOrderDocument"
                        },
                        "product": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiProductProductDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "quantity",
                        "price",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "order-item"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "quantity": {
                        "description": "A float field",
                        "default": 1,
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "price": {
                        "description": "A decimal field",
                        "default": 0,
                        "type": "number"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.214Z",
                        "type": "string"
                      },
                      "order": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "product": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "required": [
                      "quantity",
                      "price",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/order-items/{id}": {
      "get": {
        "operationId": "order-item/get/order_items_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "order",
                    "product"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "order",
                      "product"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "quantity",
                    "price",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "quantity",
                      "price",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "quantity",
                      "price",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "quantity",
                        "price",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "quantity": {
                          "description": "An integer field",
                          "default": 1,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "price": {
                          "description": "A decimal field",
                          "default": 0,
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.213Z",
                          "type": "string"
                        },
                        "order": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiOrderOrderDocument"
                        },
                        "product": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiProductProductDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "quantity",
                        "price",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "order-item"
        ]
      },
      "put": {
        "operationId": "order-item/put/order_items_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "order",
                    "product"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "order",
                      "product"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "quantity": {
                          "description": "An integer field",
                          "default": 1,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "price": {
                          "description": "A decimal field",
                          "default": 0,
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.219Z",
                          "type": "string"
                        },
                        "order": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiOrderOrderDocument"
                        },
                        "product": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiProductProductDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "quantity",
                        "price",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "order-item"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "quantity": {
                        "description": "A float field",
                        "default": 1,
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "price": {
                        "description": "A decimal field",
                        "default": 0,
                        "type": "number"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.218Z",
                        "type": "string"
                      },
                      "order": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "product": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "order-item/delete/order_items_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "order",
                    "product"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "order",
                      "product"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "quantity",
                  "price",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "quantity": {
                          "description": "An integer field",
                          "default": 1,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "price": {
                          "description": "A decimal field",
                          "default": 0,
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.220Z",
                          "type": "string"
                        },
                        "order": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiOrderOrderDocument"
                        },
                        "product": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiProductProductDocument"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "quantity",
                        "price",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "order-item"
        ]
      }
    },
    "/price-formulas": {
      "get": {
        "operationId": "price-formula/get/price_formulas",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "expression",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "expression",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "description",
                    "expression",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "description",
                      "expression",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "description",
                      "expression",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "description",
                        "expression",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": []
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": []
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "description": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "expression": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-08-17T19:00:19.224Z",
                            "type": "string"
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "price-formula"
        ]
      },
      "post": {
        "operationId": "price-formula/post/price_formulas",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "expression",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": []
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": []
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "expression": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.227Z",
                          "type": "string"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "price-formula"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "description": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "expression": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:21.087Z",
                        "type": "string"
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/price-formulas/{id}": {
      "get": {
        "operationId": "price-formula/get/price_formulas_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "expression",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": []
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": []
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "expression",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "description",
                    "expression",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "description",
                      "expression",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "description",
                      "expression",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "description",
                        "expression",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "expression": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.226Z",
                          "type": "string"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "price-formula"
        ]
      },
      "put": {
        "operationId": "price-formula/put/price_formulas_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "expression",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": []
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": []
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "expression": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.229Z",
                          "type": "string"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "price-formula"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "description": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "expression": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.228Z",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "price-formula/delete/price_formulas_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "expression",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": []
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": []
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "expression",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "expression": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.230Z",
                          "type": "string"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "price-formula"
        ]
      }
    },
    "/products": {
      "get": {
        "operationId": "product/get/products",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "slug",
                  "sku",
                  "product_type",
                  "price_variables",
                  "product_discount",
                  "final_price",
                  "stock_quantity",
                  "brand",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "slug",
                  "sku",
                  "product_type",
                  "price_variables",
                  "product_discount",
                  "final_price",
                  "stock_quantity",
                  "brand",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "description",
                    "slug",
                    "sku",
                    "product_type",
                    "price_variables",
                    "product_discount",
                    "final_price",
                    "stock_quantity",
                    "brand",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "description",
                      "slug",
                      "sku",
                      "product_type",
                      "price_variables",
                      "product_discount",
                      "final_price",
                      "stock_quantity",
                      "brand",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "description",
                      "slug",
                      "sku",
                      "product_type",
                      "price_variables",
                      "product_discount",
                      "final_price",
                      "stock_quantity",
                      "brand",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "description",
                        "slug",
                        "sku",
                        "product_type",
                        "price_variables",
                        "product_discount",
                        "final_price",
                        "stock_quantity",
                        "brand",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "product_attributes",
                    "image",
                    "primary_category",
                    "cart_items",
                    "order_items",
                    "categories",
                    "price_formula",
                    "bundle"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "product_attributes",
                      "image",
                      "primary_category",
                      "cart_items",
                      "order_items",
                      "categories",
                      "price_formula",
                      "bundle"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "description": {
                            "description": "A text field",
                            "type": "string"
                          },
                          "slug": {
                            "description": "A UID field",
                            "type": "string"
                          },
                          "sku": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "product_type": {
                            "description": "An enum field",
                            "default": "simple",
                            "type": "string",
                            "enum": [
                              "simple",
                              "bundle",
                              "kit"
                            ]
                          },
                          "price_variables": {
                            "description": "A JSON field"
                          },
                          "product_discount": {
                            "description": "A decimal field",
                            "type": "number"
                          },
                          "final_price": {
                            "description": "A decimal field",
                            "type": "number"
                          },
                          "stock_quantity": {
                            "description": "An integer field",
                            "default": 0,
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991
                          },
                          "brand": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-08-17T19:00:19.236Z",
                            "type": "string"
                          },
                          "product_attributes": {
                            "description": "A component field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ProductAttributeEntry"
                            }
                          },
                          "image": {
                            "description": "A media field",
                            "$ref": "#/components/schemas/PluginUploadFileDocument"
                          },
                          "primary_category": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                          },
                          "cart_items": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiCartItemCartItemDocument"
                            }
                          },
                          "order_items": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiOrderItemOrderItemDocument"
                            }
                          },
                          "categories": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                            }
                          },
                          "price_formula": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/ApiPriceFormulaPriceFormulaDocument"
                          },
                          "bundle": {
                            "description": "A component field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ProductProductSetEntry"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "name",
                          "sku",
                          "product_type",
                          "price_variables",
                          "stock_quantity",
                          "brand",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product"
        ]
      },
      "post": {
        "operationId": "product/post/products",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "slug",
                  "sku",
                  "product_type",
                  "price_variables",
                  "product_discount",
                  "final_price",
                  "stock_quantity",
                  "brand",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "product_attributes",
                    "image",
                    "primary_category",
                    "cart_items",
                    "order_items",
                    "categories",
                    "price_formula",
                    "bundle"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "product_attributes",
                      "image",
                      "primary_category",
                      "cart_items",
                      "order_items",
                      "categories",
                      "price_formula",
                      "bundle"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "sku": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "product_type": {
                          "description": "An enum field",
                          "default": "simple",
                          "type": "string",
                          "enum": [
                            "simple",
                            "bundle",
                            "kit"
                          ]
                        },
                        "price_variables": {
                          "description": "A JSON field"
                        },
                        "product_discount": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "final_price": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "stock_quantity": {
                          "description": "An integer field",
                          "default": 0,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "brand": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.247Z",
                          "type": "string"
                        },
                        "product_attributes": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductAttributeEntry"
                          }
                        },
                        "image": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "primary_category": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                        },
                        "cart_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCartItemCartItemDocument"
                          }
                        },
                        "order_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiOrderItemOrderItemDocument"
                          }
                        },
                        "categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                          }
                        },
                        "price_formula": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiPriceFormulaPriceFormulaDocument"
                        },
                        "bundle": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductProductSetEntry"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "sku",
                        "product_type",
                        "price_variables",
                        "stock_quantity",
                        "brand",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "description": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "sku": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "product_type": {
                        "description": "An enum field",
                        "default": "simple",
                        "type": "string",
                        "enum": [
                          "simple",
                          "bundle",
                          "kit"
                        ]
                      },
                      "price_variables": {
                        "description": "A JSON field"
                      },
                      "product_discount": {
                        "description": "A decimal field",
                        "type": "number"
                      },
                      "final_price": {
                        "description": "A decimal field",
                        "type": "number"
                      },
                      "stock_quantity": {
                        "description": "A float field",
                        "default": 0,
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "brand": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.243Z",
                        "type": "string"
                      },
                      "product_attributes": {
                        "description": "A component field",
                        "type": "array",
                        "items": {}
                      },
                      "image": {
                        "description": "A media field"
                      },
                      "primary_category": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "cart_items": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "order_items": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "categories": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "price_formula": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "bundle": {
                        "description": "A component field",
                        "type": "array",
                        "items": {}
                      }
                    },
                    "required": [
                      "name",
                      "sku",
                      "product_type",
                      "price_variables",
                      "stock_quantity",
                      "brand",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "product/get/products_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "slug",
                  "sku",
                  "product_type",
                  "price_variables",
                  "product_discount",
                  "final_price",
                  "stock_quantity",
                  "brand",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "product_attributes",
                    "image",
                    "primary_category",
                    "cart_items",
                    "order_items",
                    "categories",
                    "price_formula",
                    "bundle"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "product_attributes",
                      "image",
                      "primary_category",
                      "cart_items",
                      "order_items",
                      "categories",
                      "price_formula",
                      "bundle"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "slug",
                  "sku",
                  "product_type",
                  "price_variables",
                  "product_discount",
                  "final_price",
                  "stock_quantity",
                  "brand",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "description",
                    "slug",
                    "sku",
                    "product_type",
                    "price_variables",
                    "product_discount",
                    "final_price",
                    "stock_quantity",
                    "brand",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "description",
                      "slug",
                      "sku",
                      "product_type",
                      "price_variables",
                      "product_discount",
                      "final_price",
                      "stock_quantity",
                      "brand",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "description",
                      "slug",
                      "sku",
                      "product_type",
                      "price_variables",
                      "product_discount",
                      "final_price",
                      "stock_quantity",
                      "brand",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "description",
                        "slug",
                        "sku",
                        "product_type",
                        "price_variables",
                        "product_discount",
                        "final_price",
                        "stock_quantity",
                        "brand",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "sku": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "product_type": {
                          "description": "An enum field",
                          "default": "simple",
                          "type": "string",
                          "enum": [
                            "simple",
                            "bundle",
                            "kit"
                          ]
                        },
                        "price_variables": {
                          "description": "A JSON field"
                        },
                        "product_discount": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "final_price": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "stock_quantity": {
                          "description": "An integer field",
                          "default": 0,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "brand": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.240Z",
                          "type": "string"
                        },
                        "product_attributes": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductAttributeEntry"
                          }
                        },
                        "image": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "primary_category": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                        },
                        "cart_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCartItemCartItemDocument"
                          }
                        },
                        "order_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiOrderItemOrderItemDocument"
                          }
                        },
                        "categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                          }
                        },
                        "price_formula": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiPriceFormulaPriceFormulaDocument"
                        },
                        "bundle": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductProductSetEntry"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "sku",
                        "product_type",
                        "price_variables",
                        "stock_quantity",
                        "brand",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product"
        ]
      },
      "put": {
        "operationId": "product/put/products_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "slug",
                  "sku",
                  "product_type",
                  "price_variables",
                  "product_discount",
                  "final_price",
                  "stock_quantity",
                  "brand",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "product_attributes",
                    "image",
                    "primary_category",
                    "cart_items",
                    "order_items",
                    "categories",
                    "price_formula",
                    "bundle"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "product_attributes",
                      "image",
                      "primary_category",
                      "cart_items",
                      "order_items",
                      "categories",
                      "price_formula",
                      "bundle"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "sku": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "product_type": {
                          "description": "An enum field",
                          "default": "simple",
                          "type": "string",
                          "enum": [
                            "simple",
                            "bundle",
                            "kit"
                          ]
                        },
                        "price_variables": {
                          "description": "A JSON field"
                        },
                        "product_discount": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "final_price": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "stock_quantity": {
                          "description": "An integer field",
                          "default": 0,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "brand": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.252Z",
                          "type": "string"
                        },
                        "product_attributes": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductAttributeEntry"
                          }
                        },
                        "image": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "primary_category": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                        },
                        "cart_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCartItemCartItemDocument"
                          }
                        },
                        "order_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiOrderItemOrderItemDocument"
                          }
                        },
                        "categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                          }
                        },
                        "price_formula": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiPriceFormulaPriceFormulaDocument"
                        },
                        "bundle": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductProductSetEntry"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "sku",
                        "product_type",
                        "price_variables",
                        "stock_quantity",
                        "brand",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "description": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "sku": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "product_type": {
                        "description": "An enum field",
                        "default": "simple",
                        "type": "string",
                        "enum": [
                          "simple",
                          "bundle",
                          "kit"
                        ]
                      },
                      "price_variables": {
                        "description": "A JSON field"
                      },
                      "product_discount": {
                        "description": "A decimal field",
                        "type": "number"
                      },
                      "final_price": {
                        "description": "A decimal field",
                        "type": "number"
                      },
                      "stock_quantity": {
                        "description": "A float field",
                        "default": 0,
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "brand": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-08-17T19:00:19.250Z",
                        "type": "string"
                      },
                      "product_attributes": {
                        "description": "A component field",
                        "type": "array",
                        "items": {}
                      },
                      "image": {
                        "description": "A media field"
                      },
                      "primary_category": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "cart_items": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "order_items": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "categories": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "price_formula": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "bundle": {
                        "description": "A component field",
                        "type": "array",
                        "items": {}
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "product/delete/products_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "slug",
                  "sku",
                  "product_type",
                  "price_variables",
                  "product_discount",
                  "final_price",
                  "stock_quantity",
                  "brand",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "product_attributes",
                    "image",
                    "primary_category",
                    "cart_items",
                    "order_items",
                    "categories",
                    "price_formula",
                    "bundle"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "product_attributes",
                      "image",
                      "primary_category",
                      "cart_items",
                      "order_items",
                      "categories",
                      "price_formula",
                      "bundle"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "slug",
                  "sku",
                  "product_type",
                  "price_variables",
                  "product_discount",
                  "final_price",
                  "stock_quantity",
                  "brand",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "sku": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "product_type": {
                          "description": "An enum field",
                          "default": "simple",
                          "type": "string",
                          "enum": [
                            "simple",
                            "bundle",
                            "kit"
                          ]
                        },
                        "price_variables": {
                          "description": "A JSON field"
                        },
                        "product_discount": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "final_price": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "stock_quantity": {
                          "description": "An integer field",
                          "default": 0,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "brand": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-08-17T19:00:19.254Z",
                          "type": "string"
                        },
                        "product_attributes": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductAttributeEntry"
                          }
                        },
                        "image": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "primary_category": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                        },
                        "cart_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCartItemCartItemDocument"
                          }
                        },
                        "order_items": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiOrderItemOrderItemDocument"
                          }
                        },
                        "categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                          }
                        },
                        "price_formula": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiPriceFormulaPriceFormulaDocument"
                        },
                        "bundle": {
                          "description": "A component field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductProductSetEntry"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "name",
                        "sku",
                        "product_type",
                        "price_variables",
                        "stock_quantity",
                        "brand",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product"
        ]
      }
    },
    "/content-types": {
      "get": {
        "operationId": "content-type-builder/get/content_types",
        "parameters": [
          {
            "name": "kind",
            "in": "query",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string",
              "enum": [
                "collectionType",
                "singleType"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "string",
                            "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                          },
                          "plugin": {
                            "type": "string"
                          },
                          "apiID": {
                            "type": "string"
                          },
                          "schema": {
                            "type": "object",
                            "properties": {
                              "displayName": {
                                "type": "string"
                              },
                              "singularName": {
                                "type": "string"
                              },
                              "pluralName": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "draftAndPublish": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "collectionType",
                                  "singleType"
                                ]
                              },
                              "collectionName": {
                                "type": "string"
                              },
                              "attributes": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "media"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "multiple": {
                                          "type": "boolean"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "allowedTypes": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "multiple"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "relation"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "relation": {
                                          "type": "string"
                                        },
                                        "target": {
                                          "type": "string",
                                          "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                                        },
                                        "targetAttribute": {
                                          "anyOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        },
                                        "autoPopulate": {
                                          "type": "boolean"
                                        },
                                        "mappedBy": {
                                          "type": "string"
                                        },
                                        "inversedBy": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "relation",
                                        "target",
                                        "targetAttribute"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "component"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "component": {
                                          "type": "string"
                                        },
                                        "repeatable": {
                                          "type": "boolean"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "min": {
                                          "type": "number"
                                        },
                                        "max": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "component",
                                        "repeatable"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "dynamiczone"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "components": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "pattern": "^[\\w-]+\\.[\\w-]+$"
                                          }
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "min": {
                                          "type": "number"
                                        },
                                        "max": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "components"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "uid"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "targetField": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "unique": {
                                          "type": "boolean"
                                        },
                                        "default": {},
                                        "min": {
                                          "anyOf": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "max": {
                                          "anyOf": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "minLength": {
                                          "type": "number"
                                        },
                                        "maxLength": {
                                          "type": "number"
                                        },
                                        "enum": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "regex": {
                                          "type": "string"
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "configurable": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    }
                                  ]
                                }
                              },
                              "visible": {
                                "type": "boolean"
                              },
                              "restrictRelationsTo": {
                                "anyOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "pluginOptions": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {}
                              },
                              "options": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {}
                              },
                              "reviewWorkflows": {
                                "type": "boolean"
                              },
                              "populateCreatorFields": {
                                "type": "boolean"
                              },
                              "comment": {
                                "type": "string"
                              },
                              "version": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "displayName",
                              "singularName",
                              "pluralName",
                              "description",
                              "draftAndPublish",
                              "kind",
                              "attributes",
                              "visible",
                              "restrictRelationsTo"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "uid",
                          "apiID",
                          "schema"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "content-type-builder"
        ]
      }
    },
    "/content-types/{uid}": {
      "get": {
        "operationId": "content-type-builder/get/content_types_by_uid",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string",
              "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uid": {
                          "type": "string",
                          "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                        },
                        "plugin": {
                          "type": "string"
                        },
                        "apiID": {
                          "type": "string"
                        },
                        "schema": {
                          "type": "object",
                          "properties": {
                            "displayName": {
                              "type": "string"
                            },
                            "singularName": {
                              "type": "string"
                            },
                            "pluralName": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "draftAndPublish": {
                              "type": "boolean"
                            },
                            "kind": {
                              "type": "string",
                              "enum": [
                                "collectionType",
                                "singleType"
                              ]
                            },
                            "collectionName": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "media"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "multiple": {
                                        "type": "boolean"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "allowedTypes": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "multiple"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "relation"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "relation": {
                                        "type": "string"
                                      },
                                      "target": {
                                        "type": "string",
                                        "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                                      },
                                      "targetAttribute": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ]
                                      },
                                      "autoPopulate": {
                                        "type": "boolean"
                                      },
                                      "mappedBy": {
                                        "type": "string"
                                      },
                                      "inversedBy": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "relation",
                                      "target",
                                      "targetAttribute"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "component"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "component": {
                                        "type": "string"
                                      },
                                      "repeatable": {
                                        "type": "boolean"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "min": {
                                        "type": "number"
                                      },
                                      "max": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "component",
                                      "repeatable"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "dynamiczone"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "components": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "pattern": "^[\\w-]+\\.[\\w-]+$"
                                        }
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "min": {
                                        "type": "number"
                                      },
                                      "max": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "components"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "uid"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "targetField": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "unique": {
                                        "type": "boolean"
                                      },
                                      "default": {},
                                      "min": {
                                        "anyOf": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "max": {
                                        "anyOf": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "minLength": {
                                        "type": "number"
                                      },
                                      "maxLength": {
                                        "type": "number"
                                      },
                                      "enum": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "regex": {
                                        "type": "string"
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "configurable": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "visible": {
                              "type": "boolean"
                            },
                            "restrictRelationsTo": {
                              "anyOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "pluginOptions": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {}
                            },
                            "options": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {}
                            },
                            "reviewWorkflows": {
                              "type": "boolean"
                            },
                            "populateCreatorFields": {
                              "type": "boolean"
                            },
                            "comment": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "displayName",
                            "singularName",
                            "pluralName",
                            "description",
                            "draftAndPublish",
                            "kind",
                            "attributes",
                            "visible",
                            "restrictRelationsTo"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "uid",
                        "apiID",
                        "schema"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "content-type-builder"
        ]
      }
    },
    "/components": {
      "get": {
        "operationId": "content-type-builder/get/components",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "string",
                            "pattern": "^[\\w-]+\\.[\\w-]+$"
                          },
                          "category": {
                            "type": "string"
                          },
                          "apiId": {
                            "type": "string"
                          },
                          "schema": {
                            "type": "object",
                            "properties": {
                              "displayName": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "icon": {
                                "type": "string"
                              },
                              "connection": {
                                "type": "string"
                              },
                              "collectionName": {
                                "type": "string"
                              },
                              "attributes": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "media"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "multiple": {
                                          "type": "boolean"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "allowedTypes": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "multiple"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "relation"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "relation": {
                                          "type": "string"
                                        },
                                        "target": {
                                          "type": "string",
                                          "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                                        },
                                        "targetAttribute": {
                                          "anyOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        },
                                        "autoPopulate": {
                                          "type": "boolean"
                                        },
                                        "mappedBy": {
                                          "type": "string"
                                        },
                                        "inversedBy": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "relation",
                                        "target",
                                        "targetAttribute"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "component"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "component": {
                                          "type": "string"
                                        },
                                        "repeatable": {
                                          "type": "boolean"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "min": {
                                          "type": "number"
                                        },
                                        "max": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "component",
                                        "repeatable"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "dynamiczone"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "components": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "pattern": "^[\\w-]+\\.[\\w-]+$"
                                          }
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "min": {
                                          "type": "number"
                                        },
                                        "max": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "components"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "uid"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "targetField": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "unique": {
                                          "type": "boolean"
                                        },
                                        "default": {},
                                        "min": {
                                          "anyOf": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "max": {
                                          "anyOf": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "minLength": {
                                          "type": "number"
                                        },
                                        "maxLength": {
                                          "type": "number"
                                        },
                                        "enum": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "regex": {
                                          "type": "string"
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "configurable": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    }
                                  ]
                                }
                              },
                              "pluginOptions": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {}
                              }
                            },
                            "required": [
                              "displayName",
                              "description",
                              "attributes"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "uid",
                          "category",
                          "apiId",
                          "schema"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "content-type-builder"
        ]
      }
    },
    "/components/{uid}": {
      "get": {
        "operationId": "content-type-builder/get/components_by_uid",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string",
              "pattern": "^[\\w-]+\\.[\\w-]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uid": {
                          "type": "string",
                          "pattern": "^[\\w-]+\\.[\\w-]+$"
                        },
                        "category": {
                          "type": "string"
                        },
                        "apiId": {
                          "type": "string"
                        },
                        "schema": {
                          "type": "object",
                          "properties": {
                            "displayName": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "icon": {
                              "type": "string"
                            },
                            "connection": {
                              "type": "string"
                            },
                            "collectionName": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "media"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "multiple": {
                                        "type": "boolean"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "allowedTypes": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "multiple"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "relation"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "relation": {
                                        "type": "string"
                                      },
                                      "target": {
                                        "type": "string",
                                        "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                                      },
                                      "targetAttribute": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ]
                                      },
                                      "autoPopulate": {
                                        "type": "boolean"
                                      },
                                      "mappedBy": {
                                        "type": "string"
                                      },
                                      "inversedBy": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "relation",
                                      "target",
                                      "targetAttribute"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "component"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "component": {
                                        "type": "string"
                                      },
                                      "repeatable": {
                                        "type": "boolean"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "min": {
                                        "type": "number"
                                      },
                                      "max": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "component",
                                      "repeatable"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "dynamiczone"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "components": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "pattern": "^[\\w-]+\\.[\\w-]+$"
                                        }
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "min": {
                                        "type": "number"
                                      },
                                      "max": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "components"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "uid"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "targetField": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "unique": {
                                        "type": "boolean"
                                      },
                                      "default": {},
                                      "min": {
                                        "anyOf": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "max": {
                                        "anyOf": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "minLength": {
                                        "type": "number"
                                      },
                                      "maxLength": {
                                        "type": "number"
                                      },
                                      "enum": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "regex": {
                                        "type": "string"
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "configurable": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "pluginOptions": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {}
                            }
                          },
                          "required": [
                            "displayName",
                            "description",
                            "attributes"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "uid",
                        "category",
                        "apiId",
                        "schema"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "content-type-builder"
        ]
      }
    },
    "/": {
      "post": {
        "operationId": "upload/post",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "integer",
              "exclusiveMinimum": 0,
              "maximum": 9007199254740991
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "documentId": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "name": {
                          "type": "string"
                        },
                        "alternativeText": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "caption": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "width": {
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "height": {
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "formats": {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {}
                        },
                        "hash": {
                          "type": "string"
                        },
                        "ext": {
                          "type": "string"
                        },
                        "mime": {
                          "type": "string"
                        },
                        "size": {
                          "type": "number"
                        },
                        "url": {
                          "type": "string"
                        },
                        "previewUrl": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "folder": {
                          "type": "number"
                        },
                        "folderPath": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "provider_metadata": {
                          "anyOf": [
                            {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {}
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "createdBy": {
                          "type": "number"
                        },
                        "updatedBy": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "name",
                        "hash",
                        "mime",
                        "size",
                        "url",
                        "folderPath",
                        "provider",
                        "createdAt",
                        "updatedAt"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "maximum": 9007199254740991
                          },
                          "documentId": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "name": {
                            "type": "string"
                          },
                          "alternativeText": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "caption": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "width": {
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991
                          },
                          "height": {
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991
                          },
                          "formats": {
                            "type": "object",
                            "propertyNames": {
                              "type": "string"
                            },
                            "additionalProperties": {}
                          },
                          "hash": {
                            "type": "string"
                          },
                          "ext": {
                            "type": "string"
                          },
                          "mime": {
                            "type": "string"
                          },
                          "size": {
                            "type": "number"
                          },
                          "url": {
                            "type": "string"
                          },
                          "previewUrl": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "folder": {
                            "type": "number"
                          },
                          "folderPath": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "provider_metadata": {
                            "anyOf": [
                              {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {}
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "createdBy": {
                            "type": "number"
                          },
                          "updatedBy": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "id",
                          "documentId",
                          "name",
                          "hash",
                          "mime",
                          "size",
                          "url",
                          "folderPath",
                          "provider",
                          "createdAt",
                          "updatedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "upload"
        ]
      },
      "get": {
        "operationId": "navigation/get",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "navigation"
        ]
      }
    },
    "/files": {
      "get": {
        "operationId": "upload/get/files",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the results by specified fields",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Apply filters to the query",
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "exclusiveMinimum": 0,
                        "maximum": 9007199254740991
                      },
                      "documentId": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "name": {
                        "type": "string"
                      },
                      "alternativeText": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "caption": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "width": {
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "height": {
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "formats": {
                        "type": "object",
                        "propertyNames": {
                          "type": "string"
                        },
                        "additionalProperties": {}
                      },
                      "hash": {
                        "type": "string"
                      },
                      "ext": {
                        "type": "string"
                      },
                      "mime": {
                        "type": "string"
                      },
                      "size": {
                        "type": "number"
                      },
                      "url": {
                        "type": "string"
                      },
                      "previewUrl": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "folder": {
                        "type": "number"
                      },
                      "folderPath": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "provider_metadata": {
                        "anyOf": [
                          {
                            "type": "object",
                            "propertyNames": {
                              "type": "string"
                            },
                            "additionalProperties": {}
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "number"
                      },
                      "updatedBy": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "documentId",
                      "name",
                      "hash",
                      "mime",
                      "size",
                      "url",
                      "folderPath",
                      "provider",
                      "createdAt",
                      "updatedAt"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "upload"
        ]
      }
    },
    "/files/{id}": {
      "get": {
        "operationId": "upload/get/files_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "integer",
              "exclusiveMinimum": 0,
              "maximum": 9007199254740991
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "exclusiveMinimum": 0,
                      "maximum": 9007199254740991
                    },
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                    },
                    "name": {
                      "type": "string"
                    },
                    "alternativeText": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "caption": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "width": {
                      "type": "integer",
                      "minimum": -9007199254740991,
                      "maximum": 9007199254740991
                    },
                    "height": {
                      "type": "integer",
                      "minimum": -9007199254740991,
                      "maximum": 9007199254740991
                    },
                    "formats": {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {}
                    },
                    "hash": {
                      "type": "string"
                    },
                    "ext": {
                      "type": "string"
                    },
                    "mime": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "url": {
                      "type": "string"
                    },
                    "previewUrl": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "folder": {
                      "type": "number"
                    },
                    "folderPath": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "provider_metadata": {
                      "anyOf": [
                        {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {}
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "createdBy": {
                      "type": "number"
                    },
                    "updatedBy": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "name",
                    "hash",
                    "mime",
                    "size",
                    "url",
                    "folderPath",
                    "provider",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "upload"
        ]
      },
      "delete": {
        "operationId": "upload/delete/files_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "integer",
              "exclusiveMinimum": 0,
              "maximum": 9007199254740991
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "exclusiveMinimum": 0,
                      "maximum": 9007199254740991
                    },
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                    },
                    "name": {
                      "type": "string"
                    },
                    "alternativeText": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "caption": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "width": {
                      "type": "integer",
                      "minimum": -9007199254740991,
                      "maximum": 9007199254740991
                    },
                    "height": {
                      "type": "integer",
                      "minimum": -9007199254740991,
                      "maximum": 9007199254740991
                    },
                    "formats": {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {}
                    },
                    "hash": {
                      "type": "string"
                    },
                    "ext": {
                      "type": "string"
                    },
                    "mime": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "url": {
                      "type": "string"
                    },
                    "previewUrl": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "folder": {
                      "type": "number"
                    },
                    "folderPath": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "provider_metadata": {
                      "anyOf": [
                        {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {}
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "createdBy": {
                      "type": "number"
                    },
                    "updatedBy": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "name",
                    "hash",
                    "mime",
                    "size",
                    "url",
                    "folderPath",
                    "provider",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "upload"
        ]
      }
    },
    "/locales": {
      "get": {
        "operationId": "i18n/get/locales",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "exclusiveMinimum": 0,
                        "maximum": 9007199254740991
                      },
                      "documentId": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "name": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "publishedAt": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "isDefault": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "documentId",
                      "name",
                      "code",
                      "createdAt",
                      "updatedAt",
                      "publishedAt",
                      "isDefault"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "i18n"
        ]
      }
    },
    "/render/{idOrSlug}": {
      "get": {
        "operationId": "navigation/get/render_by_idOrSlug",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "navigation"
        ]
      }
    },
    "/render/{idOrSlug}/{childUIKey}": {
      "get": {
        "operationId": "navigation/get/render_by_idOrSlug__childUIKey",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "navigation"
        ]
      }
    },
    "/connect/(.*)": {
      "get": {
        "operationId": "users-permissions/get/connect_____",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/auth/local": {
      "post": {
        "operationId": "users-permissions/post/auth_local",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "confirmed": {
                          "type": "boolean"
                        },
                        "blocked": {
                          "type": "boolean"
                        },
                        "role": {
                          "anyOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "description",
                                "type",
                                "createdAt",
                                "updatedAt"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "username",
                        "email",
                        "provider",
                        "confirmed",
                        "blocked",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "jwt",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "identifier": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "identifier",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/local/register": {
      "post": {
        "operationId": "users-permissions/post/auth_local_register",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "jwt": {
                          "type": "string"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "documentId": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "confirmed": {
                              "type": "boolean"
                            },
                            "blocked": {
                              "type": "boolean"
                            },
                            "role": {
                              "anyOf": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "type",
                                    "createdAt",
                                    "updatedAt"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "publishedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "documentId",
                            "username",
                            "email",
                            "provider",
                            "confirmed",
                            "blocked",
                            "createdAt",
                            "updatedAt",
                            "publishedAt"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "jwt",
                        "user"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "documentId": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "confirmed": {
                              "type": "boolean"
                            },
                            "blocked": {
                              "type": "boolean"
                            },
                            "role": {
                              "anyOf": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "type",
                                    "createdAt",
                                    "updatedAt"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "publishedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "documentId",
                            "username",
                            "email",
                            "provider",
                            "confirmed",
                            "blocked",
                            "createdAt",
                            "updatedAt",
                            "publishedAt"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "user"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/{provider}/callback": {
      "get": {
        "operationId": "users-permissions/get/auth_by_provider_callback",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "confirmed": {
                          "type": "boolean"
                        },
                        "blocked": {
                          "type": "boolean"
                        },
                        "role": {
                          "anyOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "description",
                                "type",
                                "createdAt",
                                "updatedAt"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "username",
                        "email",
                        "provider",
                        "confirmed",
                        "blocked",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "jwt",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "operationId": "users-permissions/post/auth_forgot_password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  }
                },
                "required": [
                  "email"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "operationId": "users-permissions/post/auth_reset_password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "confirmed": {
                          "type": "boolean"
                        },
                        "blocked": {
                          "type": "boolean"
                        },
                        "role": {
                          "anyOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "description",
                                "type",
                                "createdAt",
                                "updatedAt"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "username",
                        "email",
                        "provider",
                        "confirmed",
                        "blocked",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "jwt",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "passwordConfirmation": {
                    "type": "string"
                  }
                },
                "required": [
                  "code",
                  "password",
                  "passwordConfirmation"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/email-confirmation": {
      "get": {
        "operationId": "users-permissions/get/auth_email_confirmation",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/auth/send-email-confirmation": {
      "post": {
        "operationId": "users-permissions/post/auth_send_email_confirmation",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "sent": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "email",
                    "sent"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  }
                },
                "required": [
                  "email"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/change-password": {
      "post": {
        "operationId": "users-permissions/post/auth_change_password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "confirmed": {
                          "type": "boolean"
                        },
                        "blocked": {
                          "type": "boolean"
                        },
                        "role": {
                          "anyOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "description",
                                "type",
                                "createdAt",
                                "updatedAt"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "username",
                        "email",
                        "provider",
                        "confirmed",
                        "blocked",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "jwt",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "passwordConfirmation": {
                    "type": "string"
                  }
                },
                "required": [
                  "currentPassword",
                  "password",
                  "passwordConfirmation"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/users/count": {
      "get": {
        "operationId": "users-permissions/get/users_count",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Apply filters to the query",
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "users-permissions/get/users",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the results by specified fields",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Apply filters to the query",
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "documentId": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "confirmed": {
                        "type": "boolean"
                      },
                      "blocked": {
                        "type": "boolean"
                      },
                      "role": {
                        "anyOf": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "type": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "description",
                              "type",
                              "createdAt",
                              "updatedAt"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "publishedAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "documentId",
                      "username",
                      "email",
                      "provider",
                      "confirmed",
                      "blocked",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      },
      "post": {
        "operationId": "users-permissions/post/users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "number"
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "operationId": "users-permissions/get/users_me",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "users-permissions/get/users_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      },
      "put": {
        "operationId": "users-permissions/put/users_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "users-permissions/delete/users_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/roles/{id}": {
      "get": {
        "operationId": "users-permissions/get/roles_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "type": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        },
                        "nb_users": {
                          "type": "number"
                        },
                        "permissions": {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "controllers": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {
                                  "type": "object",
                                  "propertyNames": {
                                    "type": "string"
                                  },
                                  "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean"
                                      },
                                      "policy": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "enabled",
                                      "policy"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              }
                            },
                            "required": [
                              "controllers"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "users": {
                          "type": "array",
                          "items": {}
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "name",
                        "description",
                        "type",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "role"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/roles": {
      "get": {
        "operationId": "users-permissions/get/roles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "documentId": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "type": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "publishedAt": {
                            "type": "string"
                          },
                          "nb_users": {
                            "type": "number"
                          },
                          "permissions": {
                            "type": "object",
                            "propertyNames": {
                              "type": "string"
                            },
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "controllers": {
                                  "type": "object",
                                  "propertyNames": {
                                    "type": "string"
                                  },
                                  "additionalProperties": {
                                    "type": "object",
                                    "propertyNames": {
                                      "type": "string"
                                    },
                                    "additionalProperties": {
                                      "type": "object",
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean"
                                        },
                                        "policy": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "enabled",
                                        "policy"
                                      ],
                                      "additionalProperties": false
                                    }
                                  }
                                }
                              },
                              "required": [
                                "controllers"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "users": {
                            "type": "array",
                            "items": {}
                          }
                        },
                        "required": [
                          "id",
                          "documentId",
                          "name",
                          "description",
                          "type",
                          "createdAt",
                          "updatedAt",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "roles"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      },
      "post": {
        "operationId": "users-permissions/post/roles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "permissions": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {}
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/roles/{role}": {
      "put": {
        "operationId": "users-permissions/put/roles_by_role",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "permissions": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {}
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "users-permissions/delete/roles_by_role",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/permissions": {
      "get": {
        "operationId": "users-permissions/get/permissions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "permissions": {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "controllers": {
                            "type": "object",
                            "propertyNames": {
                              "type": "string"
                            },
                            "additionalProperties": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean"
                                  },
                                  "policy": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "enabled",
                                  "policy"
                                ],
                                "additionalProperties": false
                              }
                            }
                          }
                        },
                        "required": [
                          "controllers"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "permissions"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PluginUploadFileDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "alternativeText": {
            "description": "A string field",
            "type": "string"
          },
          "caption": {
            "description": "A string field",
            "type": "string"
          },
          "width": {
            "description": "An integer field",
            "type": "integer",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "height": {
            "description": "An integer field",
            "type": "integer",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "formats": {
            "description": "A JSON field"
          },
          "hash": {
            "description": "A string field",
            "type": "string"
          },
          "ext": {
            "description": "A string field",
            "type": "string"
          },
          "mime": {
            "description": "A string field",
            "type": "string"
          },
          "size": {
            "description": "A decimal field",
            "type": "number"
          },
          "url": {
            "description": "A string field",
            "type": "string"
          },
          "previewUrl": {
            "description": "A string field",
            "type": "string"
          },
          "provider": {
            "description": "A string field",
            "type": "string"
          },
          "provider_metadata": {
            "description": "A JSON field"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-08-17T19:00:19.077Z",
            "type": "string"
          },
          "related": {}
        },
        "required": [
          "documentId",
          "id",
          "name",
          "hash",
          "mime",
          "size",
          "url",
          "provider",
          "publishedAt",
          "related"
        ],
        "additionalProperties": false,
        "id": "PluginUploadFileDocument"
      },
      "PluginUsersPermissionsPermissionDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "action": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-08-17T19:00:19.115Z",
            "type": "string"
          },
          "role": {
            "description": "A relational field",
            "$ref": "#/components/schemas/PluginUsersPermissionsRoleDocument"
          }
        },
        "required": [
          "documentId",
          "id",
          "action",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "PluginUsersPermissionsPermissionDocument"
      },
      "PluginUsersPermissionsRoleDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "description": {
            "description": "A string field",
            "type": "string"
          },
          "type": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-08-17T19:00:19.115Z",
            "type": "string"
          },
          "permissions": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginUsersPermissionsPermissionDocument"
            }
          },
          "users": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "name",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "PluginUsersPermissionsRoleDocument"
      },
      "ProductAttributeEntry": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "key": {
            "description": "A string field",
            "type": "string"
          },
          "value": {
            "description": "A string field",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "id": "ProductAttributeEntry"
      },
      "ApiCategoryCategoryDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "slug": {
            "description": "A UID field",
            "type": "string"
          },
          "description": {
            "description": "A text field",
            "type": "string"
          },
          "short_description": {
            "description": "A string field",
            "type": "string"
          },
          "is_active": {
            "description": "A boolean field",
            "default": true,
            "type": "boolean"
          },
          "sort_order": {
            "description": "An integer field",
            "default": 0,
            "type": "integer",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "seo_title": {
            "description": "A string field",
            "type": "string"
          },
          "seo_description": {
            "description": "A text field",
            "type": "string"
          },
          "type": {
            "description": "An enum field",
            "default": "product",
            "type": "string",
            "enum": [
              "product",
              "marketing",
              "goals"
            ]
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-08-17T19:00:19.122Z",
            "type": "string"
          },
          "image": {
            "description": "A media field",
            "$ref": "#/components/schemas/PluginUploadFileDocument"
          },
          "icon": {
            "description": "A media field",
            "$ref": "#/components/schemas/PluginUploadFileDocument"
          },
          "parent": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
          },
          "children": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
            }
          },
          "products": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiProductProductDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "name",
          "slug",
          "is_active",
          "sort_order",
          "type",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiCategoryCategoryDocument"
      },
      "ApiCartCartDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "payment_status": {
            "description": "An enum field",
            "default": "active",
            "type": "string",
            "enum": [
              "active",
              "complete"
            ]
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-08-17T19:00:19.124Z",
            "type": "string"
          },
          "users_permissions_user": {
            "description": "A relational field",
            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
          },
          "cart_items": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiCartItemCartItemDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "payment_status",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiCartCartDocument"
      },
      "ApiCartItemCartItemDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "quantity": {
            "description": "An integer field",
            "type": "integer",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "price_at_time": {
            "description": "A decimal field",
            "type": "number"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-08-17T19:00:19.123Z",
            "type": "string"
          },
          "cart": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiCartCartDocument"
          },
          "product": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiProductProductDocument"
          }
        },
        "required": [
          "documentId",
          "id",
          "quantity",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiCartItemCartItemDocument"
      },
      "ApiPriceFormulaPriceFormulaDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "description": {
            "description": "A string field",
            "type": "string"
          },
          "expression": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-08-17T19:00:19.125Z",
            "type": "string"
          }
        },
        "required": [
          "documentId",
          "id",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiPriceFormulaPriceFormulaDocument"
      },
      "ProductProductSetEntry": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {},
        "additionalProperties": false,
        "id": "ProductProductSetEntry"
      },
      "ApiProductProductDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "description": {
            "description": "A text field",
            "type": "string"
          },
          "slug": {
            "description": "A UID field",
            "type": "string"
          },
          "sku": {
            "description": "A string field",
            "type": "string"
          },
          "product_type": {
            "description": "An enum field",
            "default": "simple",
            "type": "string",
            "enum": [
              "simple",
              "bundle",
              "kit"
            ]
          },
          "price_variables": {
            "description": "A JSON field"
          },
          "product_discount": {
            "description": "A decimal field",
            "type": "number"
          },
          "final_price": {
            "description": "A decimal field",
            "type": "number"
          },
          "stock_quantity": {
            "description": "An integer field",
            "default": 0,
            "type": "integer",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "brand": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-08-17T19:00:19.121Z",
            "type": "string"
          },
          "product_attributes": {
            "description": "A component field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAttributeEntry"
            }
          },
          "image": {
            "description": "A media field",
            "$ref": "#/components/schemas/PluginUploadFileDocument"
          },
          "primary_category": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
          },
          "cart_items": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiCartItemCartItemDocument"
            }
          },
          "order_items": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiOrderItemOrderItemDocument"
            }
          },
          "categories": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
            }
          },
          "price_formula": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiPriceFormulaPriceFormulaDocument"
          },
          "bundle": {
            "description": "A component field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductProductSetEntry"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "name",
          "sku",
          "product_type",
          "price_variables",
          "stock_quantity",
          "brand",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiProductProductDocument"
      },
      "ApiOrderItemOrderItemDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "quantity": {
            "description": "An integer field",
            "default": 1,
            "type": "integer",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "price": {
            "description": "A decimal field",
            "default": 0,
            "type": "number"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-08-17T19:00:19.119Z",
            "type": "string"
          },
          "order": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiOrderOrderDocument"
          },
          "product": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiProductProductDocument"
          }
        },
        "required": [
          "documentId",
          "id",
          "quantity",
          "price",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiOrderItemOrderItemDocument"
      },
      "ApiOrderOrderDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "order_date": {
            "description": "A datetime field",
            "type": "string"
          },
          "order_number": {
            "description": "A string field",
            "type": "string"
          },
          "order_status": {
            "description": "An enum field",
            "default": "pending",
            "type": "string",
            "enum": [
              "pending",
              "processing",
              "shipped",
              "delivered",
              "cancelled"
            ]
          },
          "customer_name": {
            "description": "A string field",
            "type": "string"
          },
          "customer_email": {
            "description": "An email field",
            "type": "string",
            "format": "email",
            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
          },
          "customer_phone": {
            "description": "A string field",
            "type": "string"
          },
          "total_amount": {
            "description": "A decimal field",
            "type": "number"
          },
          "shipping_method": {
            "description": "An enum field",
            "type": "string",
            "enum": [
              "nova_poshta",
              "ukr_poshta"
            ]
          },
          "shipping_address": {
            "description": "A text field",
            "type": "string"
          },
          "payment_method": {
            "description": "An enum field",
            "type": "string",
            "enum": [
              "cash_on_delivery",
              "card_online",
              "apple_pay",
              "google_pay",
              "liqpay",
              "monobank",
              "privat24"
            ]
          },
          "payment_status": {
            "description": "An enum field",
            "type": "string",
            "enum": [
              "pending",
              "paid",
              "failed",
              "refunded"
            ]
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-08-17T19:00:19.119Z",
            "type": "string"
          },
          "order_items": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiOrderItemOrderItemDocument"
            }
          },
          "users_permissions_user": {
            "description": "A relational field",
            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
          }
        },
        "required": [
          "documentId",
          "id",
          "order_status",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiOrderOrderDocument"
      },
      "PluginUsersPermissionsUserDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "username": {
            "description": "A string field",
            "type": "string"
          },
          "email": {
            "description": "An email field",
            "type": "string",
            "format": "email",
            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
          },
          "provider": {
            "description": "A string field",
            "type": "string"
          },
          "confirmed": {
            "description": "A boolean field",
            "default": false,
            "type": "boolean"
          },
          "blocked": {
            "description": "A boolean field",
            "default": false,
            "type": "boolean"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-08-17T19:00:19.114Z",
            "type": "string"
          },
          "role": {
            "description": "A relational field",
            "$ref": "#/components/schemas/PluginUsersPermissionsRoleDocument"
          },
          "orders": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiOrderOrderDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "username",
          "email",
          "confirmed",
          "blocked",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "PluginUsersPermissionsUserDocument"
      },
      "ApiFilterGroupFilterGroupDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "slug": {
            "description": "A UID field",
            "type": "string"
          },
          "type": {
            "description": "An enum field",
            "type": "string",
            "enum": [
              "select",
              "checkbox",
              "range"
            ]
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-08-17T19:00:19.171Z",
            "type": "string"
          },
          "filter_values": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiFilterValueFilterValueDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiFilterGroupFilterGroupDocument"
      },
      "ApiFilterValueFilterValueDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "slug": {
            "description": "A UID field",
            "type": "string"
          },
          "value": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-08-17T19:00:19.170Z",
            "type": "string"
          },
          "filter_group": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiFilterGroupFilterGroupDocument"
          }
        },
        "required": [
          "documentId",
          "id",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiFilterValueFilterValueDocument"
      }
    }
  }
}